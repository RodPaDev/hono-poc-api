/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthFoodImport } from './routes/_auth/food'
import { Route as AuthOrganizationsOrganizationIdIndexImport } from './routes/_auth/organizations/$organizationId/index'
import { Route as AuthOrganizationsOrganizationIdUsersIndexImport } from './routes/_auth/organizations/$organizationId/users/index'
import { Route as AuthOrganizationsOrganizationIdActionsNewImport } from './routes/_auth/organizations/$organizationId/actions/new'
import { Route as AuthOrganizationsOrganizationIdActionsEditImport } from './routes/_auth/organizations/$organizationId/actions/edit'
import { Route as AuthOrganizationsOrganizationIdUsersUserIdIndexImport } from './routes/_auth/organizations/$organizationId/users/$userId/index'
import { Route as AuthOrganizationsOrganizationIdUsersUserIdNewImport } from './routes/_auth/organizations/$organizationId/users/$userId/new'
import { Route as AuthOrganizationsOrganizationIdUsersUserIdEditImport } from './routes/_auth/organizations/$organizationId/users/$userId/edit'
import { Route as AuthOrganizationsOrganizationIdUsersUserIdConfirmImport } from './routes/_auth/organizations/$organizationId/users/$userId/confirm'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthFoodRoute = AuthFoodImport.update({
  id: '/food',
  path: '/food',
  getParentRoute: () => AuthRoute,
} as any)

const AuthOrganizationsOrganizationIdIndexRoute =
  AuthOrganizationsOrganizationIdIndexImport.update({
    id: '/organizations/$organizationId/',
    path: '/organizations/$organizationId/',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthOrganizationsOrganizationIdUsersIndexRoute =
  AuthOrganizationsOrganizationIdUsersIndexImport.update({
    id: '/organizations/$organizationId/users/',
    path: '/organizations/$organizationId/users/',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthOrganizationsOrganizationIdActionsNewRoute =
  AuthOrganizationsOrganizationIdActionsNewImport.update({
    id: '/organizations/$organizationId/actions/new',
    path: '/organizations/$organizationId/actions/new',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthOrganizationsOrganizationIdActionsEditRoute =
  AuthOrganizationsOrganizationIdActionsEditImport.update({
    id: '/organizations/$organizationId/actions/edit',
    path: '/organizations/$organizationId/actions/edit',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthOrganizationsOrganizationIdUsersUserIdIndexRoute =
  AuthOrganizationsOrganizationIdUsersUserIdIndexImport.update({
    id: '/organizations/$organizationId/users/$userId/',
    path: '/organizations/$organizationId/users/$userId/',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthOrganizationsOrganizationIdUsersUserIdNewRoute =
  AuthOrganizationsOrganizationIdUsersUserIdNewImport.update({
    id: '/organizations/$organizationId/users/$userId/new',
    path: '/organizations/$organizationId/users/$userId/new',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthOrganizationsOrganizationIdUsersUserIdEditRoute =
  AuthOrganizationsOrganizationIdUsersUserIdEditImport.update({
    id: '/organizations/$organizationId/users/$userId/edit',
    path: '/organizations/$organizationId/users/$userId/edit',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthOrganizationsOrganizationIdUsersUserIdConfirmRoute =
  AuthOrganizationsOrganizationIdUsersUserIdConfirmImport.update({
    id: '/organizations/$organizationId/users/$userId/confirm',
    path: '/organizations/$organizationId/users/$userId/confirm',
    getParentRoute: () => AuthRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/_auth/food': {
      id: '/_auth/food'
      path: '/food'
      fullPath: '/food'
      preLoaderRoute: typeof AuthFoodImport
      parentRoute: typeof AuthImport
    }
    '/_auth/organizations/$organizationId/': {
      id: '/_auth/organizations/$organizationId/'
      path: '/organizations/$organizationId'
      fullPath: '/organizations/$organizationId'
      preLoaderRoute: typeof AuthOrganizationsOrganizationIdIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/organizations/$organizationId/actions/edit': {
      id: '/_auth/organizations/$organizationId/actions/edit'
      path: '/organizations/$organizationId/actions/edit'
      fullPath: '/organizations/$organizationId/actions/edit'
      preLoaderRoute: typeof AuthOrganizationsOrganizationIdActionsEditImport
      parentRoute: typeof AuthImport
    }
    '/_auth/organizations/$organizationId/actions/new': {
      id: '/_auth/organizations/$organizationId/actions/new'
      path: '/organizations/$organizationId/actions/new'
      fullPath: '/organizations/$organizationId/actions/new'
      preLoaderRoute: typeof AuthOrganizationsOrganizationIdActionsNewImport
      parentRoute: typeof AuthImport
    }
    '/_auth/organizations/$organizationId/users/': {
      id: '/_auth/organizations/$organizationId/users/'
      path: '/organizations/$organizationId/users'
      fullPath: '/organizations/$organizationId/users'
      preLoaderRoute: typeof AuthOrganizationsOrganizationIdUsersIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/organizations/$organizationId/users/$userId/confirm': {
      id: '/_auth/organizations/$organizationId/users/$userId/confirm'
      path: '/organizations/$organizationId/users/$userId/confirm'
      fullPath: '/organizations/$organizationId/users/$userId/confirm'
      preLoaderRoute: typeof AuthOrganizationsOrganizationIdUsersUserIdConfirmImport
      parentRoute: typeof AuthImport
    }
    '/_auth/organizations/$organizationId/users/$userId/edit': {
      id: '/_auth/organizations/$organizationId/users/$userId/edit'
      path: '/organizations/$organizationId/users/$userId/edit'
      fullPath: '/organizations/$organizationId/users/$userId/edit'
      preLoaderRoute: typeof AuthOrganizationsOrganizationIdUsersUserIdEditImport
      parentRoute: typeof AuthImport
    }
    '/_auth/organizations/$organizationId/users/$userId/new': {
      id: '/_auth/organizations/$organizationId/users/$userId/new'
      path: '/organizations/$organizationId/users/$userId/new'
      fullPath: '/organizations/$organizationId/users/$userId/new'
      preLoaderRoute: typeof AuthOrganizationsOrganizationIdUsersUserIdNewImport
      parentRoute: typeof AuthImport
    }
    '/_auth/organizations/$organizationId/users/$userId/': {
      id: '/_auth/organizations/$organizationId/users/$userId/'
      path: '/organizations/$organizationId/users/$userId'
      fullPath: '/organizations/$organizationId/users/$userId'
      preLoaderRoute: typeof AuthOrganizationsOrganizationIdUsersUserIdIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthFoodRoute: typeof AuthFoodRoute
  AuthOrganizationsOrganizationIdIndexRoute: typeof AuthOrganizationsOrganizationIdIndexRoute
  AuthOrganizationsOrganizationIdActionsEditRoute: typeof AuthOrganizationsOrganizationIdActionsEditRoute
  AuthOrganizationsOrganizationIdActionsNewRoute: typeof AuthOrganizationsOrganizationIdActionsNewRoute
  AuthOrganizationsOrganizationIdUsersIndexRoute: typeof AuthOrganizationsOrganizationIdUsersIndexRoute
  AuthOrganizationsOrganizationIdUsersUserIdConfirmRoute: typeof AuthOrganizationsOrganizationIdUsersUserIdConfirmRoute
  AuthOrganizationsOrganizationIdUsersUserIdEditRoute: typeof AuthOrganizationsOrganizationIdUsersUserIdEditRoute
  AuthOrganizationsOrganizationIdUsersUserIdNewRoute: typeof AuthOrganizationsOrganizationIdUsersUserIdNewRoute
  AuthOrganizationsOrganizationIdUsersUserIdIndexRoute: typeof AuthOrganizationsOrganizationIdUsersUserIdIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthFoodRoute: AuthFoodRoute,
  AuthOrganizationsOrganizationIdIndexRoute:
    AuthOrganizationsOrganizationIdIndexRoute,
  AuthOrganizationsOrganizationIdActionsEditRoute:
    AuthOrganizationsOrganizationIdActionsEditRoute,
  AuthOrganizationsOrganizationIdActionsNewRoute:
    AuthOrganizationsOrganizationIdActionsNewRoute,
  AuthOrganizationsOrganizationIdUsersIndexRoute:
    AuthOrganizationsOrganizationIdUsersIndexRoute,
  AuthOrganizationsOrganizationIdUsersUserIdConfirmRoute:
    AuthOrganizationsOrganizationIdUsersUserIdConfirmRoute,
  AuthOrganizationsOrganizationIdUsersUserIdEditRoute:
    AuthOrganizationsOrganizationIdUsersUserIdEditRoute,
  AuthOrganizationsOrganizationIdUsersUserIdNewRoute:
    AuthOrganizationsOrganizationIdUsersUserIdNewRoute,
  AuthOrganizationsOrganizationIdUsersUserIdIndexRoute:
    AuthOrganizationsOrganizationIdUsersUserIdIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/food': typeof AuthFoodRoute
  '/organizations/$organizationId': typeof AuthOrganizationsOrganizationIdIndexRoute
  '/organizations/$organizationId/actions/edit': typeof AuthOrganizationsOrganizationIdActionsEditRoute
  '/organizations/$organizationId/actions/new': typeof AuthOrganizationsOrganizationIdActionsNewRoute
  '/organizations/$organizationId/users': typeof AuthOrganizationsOrganizationIdUsersIndexRoute
  '/organizations/$organizationId/users/$userId/confirm': typeof AuthOrganizationsOrganizationIdUsersUserIdConfirmRoute
  '/organizations/$organizationId/users/$userId/edit': typeof AuthOrganizationsOrganizationIdUsersUserIdEditRoute
  '/organizations/$organizationId/users/$userId/new': typeof AuthOrganizationsOrganizationIdUsersUserIdNewRoute
  '/organizations/$organizationId/users/$userId': typeof AuthOrganizationsOrganizationIdUsersUserIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/food': typeof AuthFoodRoute
  '/organizations/$organizationId': typeof AuthOrganizationsOrganizationIdIndexRoute
  '/organizations/$organizationId/actions/edit': typeof AuthOrganizationsOrganizationIdActionsEditRoute
  '/organizations/$organizationId/actions/new': typeof AuthOrganizationsOrganizationIdActionsNewRoute
  '/organizations/$organizationId/users': typeof AuthOrganizationsOrganizationIdUsersIndexRoute
  '/organizations/$organizationId/users/$userId/confirm': typeof AuthOrganizationsOrganizationIdUsersUserIdConfirmRoute
  '/organizations/$organizationId/users/$userId/edit': typeof AuthOrganizationsOrganizationIdUsersUserIdEditRoute
  '/organizations/$organizationId/users/$userId/new': typeof AuthOrganizationsOrganizationIdUsersUserIdNewRoute
  '/organizations/$organizationId/users/$userId': typeof AuthOrganizationsOrganizationIdUsersUserIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/_auth/food': typeof AuthFoodRoute
  '/_auth/organizations/$organizationId/': typeof AuthOrganizationsOrganizationIdIndexRoute
  '/_auth/organizations/$organizationId/actions/edit': typeof AuthOrganizationsOrganizationIdActionsEditRoute
  '/_auth/organizations/$organizationId/actions/new': typeof AuthOrganizationsOrganizationIdActionsNewRoute
  '/_auth/organizations/$organizationId/users/': typeof AuthOrganizationsOrganizationIdUsersIndexRoute
  '/_auth/organizations/$organizationId/users/$userId/confirm': typeof AuthOrganizationsOrganizationIdUsersUserIdConfirmRoute
  '/_auth/organizations/$organizationId/users/$userId/edit': typeof AuthOrganizationsOrganizationIdUsersUserIdEditRoute
  '/_auth/organizations/$organizationId/users/$userId/new': typeof AuthOrganizationsOrganizationIdUsersUserIdNewRoute
  '/_auth/organizations/$organizationId/users/$userId/': typeof AuthOrganizationsOrganizationIdUsersUserIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/food'
    | '/organizations/$organizationId'
    | '/organizations/$organizationId/actions/edit'
    | '/organizations/$organizationId/actions/new'
    | '/organizations/$organizationId/users'
    | '/organizations/$organizationId/users/$userId/confirm'
    | '/organizations/$organizationId/users/$userId/edit'
    | '/organizations/$organizationId/users/$userId/new'
    | '/organizations/$organizationId/users/$userId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/food'
    | '/organizations/$organizationId'
    | '/organizations/$organizationId/actions/edit'
    | '/organizations/$organizationId/actions/new'
    | '/organizations/$organizationId/users'
    | '/organizations/$organizationId/users/$userId/confirm'
    | '/organizations/$organizationId/users/$userId/edit'
    | '/organizations/$organizationId/users/$userId/new'
    | '/organizations/$organizationId/users/$userId'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/about'
    | '/_auth/food'
    | '/_auth/organizations/$organizationId/'
    | '/_auth/organizations/$organizationId/actions/edit'
    | '/_auth/organizations/$organizationId/actions/new'
    | '/_auth/organizations/$organizationId/users/'
    | '/_auth/organizations/$organizationId/users/$userId/confirm'
    | '/_auth/organizations/$organizationId/users/$userId/edit'
    | '/_auth/organizations/$organizationId/users/$userId/new'
    | '/_auth/organizations/$organizationId/users/$userId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  AboutRoute: typeof AboutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  AboutRoute: AboutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/food",
        "/_auth/organizations/$organizationId/",
        "/_auth/organizations/$organizationId/actions/edit",
        "/_auth/organizations/$organizationId/actions/new",
        "/_auth/organizations/$organizationId/users/",
        "/_auth/organizations/$organizationId/users/$userId/confirm",
        "/_auth/organizations/$organizationId/users/$userId/edit",
        "/_auth/organizations/$organizationId/users/$userId/new",
        "/_auth/organizations/$organizationId/users/$userId/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/_auth/food": {
      "filePath": "_auth/food.tsx",
      "parent": "/_auth"
    },
    "/_auth/organizations/$organizationId/": {
      "filePath": "_auth/organizations/$organizationId/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/organizations/$organizationId/actions/edit": {
      "filePath": "_auth/organizations/$organizationId/actions/edit.tsx",
      "parent": "/_auth"
    },
    "/_auth/organizations/$organizationId/actions/new": {
      "filePath": "_auth/organizations/$organizationId/actions/new.tsx",
      "parent": "/_auth"
    },
    "/_auth/organizations/$organizationId/users/": {
      "filePath": "_auth/organizations/$organizationId/users/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/organizations/$organizationId/users/$userId/confirm": {
      "filePath": "_auth/organizations/$organizationId/users/$userId/confirm.tsx",
      "parent": "/_auth"
    },
    "/_auth/organizations/$organizationId/users/$userId/edit": {
      "filePath": "_auth/organizations/$organizationId/users/$userId/edit.tsx",
      "parent": "/_auth"
    },
    "/_auth/organizations/$organizationId/users/$userId/new": {
      "filePath": "_auth/organizations/$organizationId/users/$userId/new.tsx",
      "parent": "/_auth"
    },
    "/_auth/organizations/$organizationId/users/$userId/": {
      "filePath": "_auth/organizations/$organizationId/users/$userId/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
